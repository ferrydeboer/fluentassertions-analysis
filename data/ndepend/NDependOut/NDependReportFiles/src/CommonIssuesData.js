var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1000","name":"Avoid types too big","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2071458910"},{"id":"ND1001","name":"Avoid types with too many methods","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1588423785"},{"id":"ND1003","name":"Avoid methods too big, too complex","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2368539037"},{"id":"ND1005","name":"Avoid methods with too many overloads","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query3814626502"},{"id":"ND1006","name":"Avoid methods potentially poorly commented","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query4051380568"},{"id":"ND1200","name":"Avoid interfaces too big","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query1702099707"},{"id":"ND1202","name":"Class shouldn\'t be too deep in inheritance tree","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query585191978"},{"id":"ND1203","name":"Class with no descendant should be sealed if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2132437556"},{"id":"ND1213","name":"Avoid types initialization cycles","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2432588237"},{"id":"ND1300","name":"Avoid custom delegates","cat":"Design","url":"../../NDependReport.html?e=1#Query2822976329"},{"id":"ND1305","name":"Avoid namespaces with few types","cat":"Design","url":"../../NDependReport.html?e=1#Query3431837327"},{"id":"ND1306","name":"Nested types should not be visible","cat":"Design","url":"../../NDependReport.html?e=1#Query442335452"},{"id":"ND1310","name":"Attribute classes should be sealed","cat":"Design","url":"../../NDependReport.html?e=1#Query1402225742"},{"id":"ND1311","name":"Don\'t use obsolete types, methods or fields","cat":"Design","url":"../../NDependReport.html?e=1#Query1809180291"},{"id":"ND1313","name":"Override equals and operator equals on value types","cat":"Design","url":"../../NDependReport.html?e=1#Query2569341786"},{"id":"ND1400","name":"Avoid namespaces mutually dependent","cat":"Architecture","url":"../../NDependReport.html?e=1#Query1653453125"},{"id":"ND1401","name":"Avoid namespaces dependency cycles","cat":"Architecture","url":"../../NDependReport.html?e=1#Query628377565"},{"id":"ND1406","name":"Namespaces with poor cohesion (RelationalCohesion)","cat":"Architecture","url":"../../NDependReport.html?e=1#Query3777573133"},{"id":"ND1600","name":"Code should be tested","cat":"Code Coverage","url":"../../NDependReport.html?e=1#Query1164350716"},{"id":"ND1603","name":"Assemblies and Namespaces should be tested","cat":"Code Coverage","url":"../../NDependReport.html?e=1#Query2119782720"},{"id":"ND1604","name":"Types almost 100% tested should be 100% tested","cat":"Code Coverage","url":"../../NDependReport.html?e=1#Query1732077970"},{"id":"ND1605","name":"Namespaces almost 100% tested should be 100% tested","cat":"Code Coverage","url":"../../NDependReport.html?e=1#Query3195535207"},{"id":"ND1608","name":"Types 100% covered should be tagged with FullCoveredAttribute","cat":"Code Coverage","url":"../../NDependReport.html?e=1#Query328164050"},{"id":"ND1701","name":"Potentially Dead Methods","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query1236384003"},{"id":"ND1800","name":"Methods that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query3956120347"},{"id":"ND1802","name":"Fields that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query665364738"},{"id":"ND1803","name":"Types that could be declared as private, nested in a parent type","cat":"Visibility","url":"../../NDependReport.html?e=1#Query4257738350"},{"id":"ND1804","name":"Avoid publicly visible constant fields","cat":"Visibility","url":"../../NDependReport.html?e=1#Query456168778"},{"id":"ND1807","name":"Avoid public methods not publicly visible","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2977263888"},{"id":"ND1901","name":"Avoid non-readonly static fields","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1757686740"},{"id":"ND1902","name":"Avoid static fields with a mutable field type","cat":"Immutability","url":"../../NDependReport.html?e=1#Query4019283338"},{"id":"ND1903","name":"Structures should be immutable","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2727642282"},{"id":"ND1905","name":"A field must not be assigned from outside its parent hierarchy types","cat":"Immutability","url":"../../NDependReport.html?e=1#Query567343204"},{"id":"ND1906","name":"Don\'t assign a field from many methods","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1975613094"},{"id":"ND2001","name":"Static fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1160401199"},{"id":"ND2003","name":"Abstract base class should be suffixed with \'Base\'","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3500616363"},{"id":"ND2010","name":"Avoid methods with name too long","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query399742796"},{"id":"ND2012","name":"Avoid having different types with same name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1043522630"},{"id":"ND2013","name":"Avoid prefixing type name with parent namespace name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3170948257"},{"id":"ND2016","name":"Methods prefixed with \'Try\' should return a boolean","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1300267453"},{"id":"ND2102","name":"Avoid defining multiple types in a source file","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3680765393"},{"id":"ND2103","name":"Namespace name should correspond to file location","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query754292209"},{"id":"ND2209","name":"Uri fields or properties should be of type System.Uri","cat":"System","url":"../../NDependReport.html?e=1#Query3640264196"}]}'